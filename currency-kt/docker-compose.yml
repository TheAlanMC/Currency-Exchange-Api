version: "2.4"

services:
  postgres:
    image: arm64v8/postgres
    mem_limit: 512m
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#      POSTGRES_DB: software
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - /Users/chrisalanapazaaguilar/Desktop/SIS-311/docker/postgres:/var/lib/postgresql/data
    networks:
      - my-network

  keycloak:
    image: quay.io/keycloak/keycloak:21.0.1
    command: start-dev
    restart: always
    mem_limit: 512m
    ports:
      - "8090:8090"
    environment:
      DB_VENDOR: h2
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HTTP_PORT: 8090
    volumes:
      - /Users/chrisalanapazaaguilar/Desktop/SIS-311/docker/keycloak:/opt/keycloak/data
    networks:
      - my-network

  currency-converter:
    image: demo_currency:8.0.0
    restart: always
    mem_limit: 512m
    ports:
      - "8080:8080"
    environment:
      URL: ${POSTGRES_URL}
      USERNAME: ${POSTGRES_USER}
      PASSWORD: ${POSTGRES_PASSWORD}
      API_KEY: ${API_KEY}
      PORT: 8080
      KEYCLOAK_URL: ${KEYCLOAK_URL}
    volumes:
      - /Users/chrisalanapazaaguilar/Desktop/SIS-311/docker/spring:/var/log/spring_boot
    depends_on:
      - postgres
      - keycloak
    networks:
      - my-network

  angular:
    image: angular_currency:5.0.0
    restart: always
    ports:
      - "4200:80"
    volumes:
      - /Users/chrisalanapazaaguilar/Desktop/SIS-311/docker/angular/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - keycloak
    networks:
      - my-network

networks:
  my-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.2.0.0/16
          gateway: 172.2.0.1